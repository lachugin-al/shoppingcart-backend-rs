version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  app:
    build: .
    container_name: shoppingcart-app
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      KAFKA_BROKERS: ${KAFKA_BROKERS}
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      KAFKA_GROUP_ID: ${KAFKA_GROUP_ID}
      HTTP_PORT: ${HTTP_PORT}
      SHUTDOWN_TIMEOUT: ${SHUTDOWN_TIMEOUT}
      PROMETHEUS_PORT: ${PROMETHEUS_PORT}
      GRAFANA_PORT: ${GRAFANA_PORT}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      DATA_SOURCE_NAME: ${DATA_SOURCE_NAME}
      POSTGRES_EXPORTER_PORT: ${POSTGRES_EXPORTER_PORT}
      KAFKA_EXPORTER_PORT: ${KAFKA_EXPORTER_PORT}
      JAEGER_AGENT_HOST: ${JAEGER_AGENT_HOST}
      JAEGER_AGENT_PORT: ${JAEGER_AGENT_PORT}
      JAEGER_COLLECTOR_PORT: ${JAEGER_COLLECTOR_PORT}
      JAEGER_UI_PORT: ${JAEGER_UI_PORT}
    depends_on:
      - postgres
      - kafka
      - jaeger
    ports:
      - "${HTTP_PORT}:8081"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/rules.yml:/etc/prometheus/rules.yml
    ports:
      - "${PROMETHEUS_PORT}:9090"
    environment:
      PROMETHEUS_CONFIG_PATH: ${PROMETHEUS_CONFIG_PATH}

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "${GRAFANA_PORT}:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    depends_on:
      - postgres
    environment:
      DATA_SOURCE_NAME: ${DATA_SOURCE_NAME}
    ports:
      - "${POSTGRES_EXPORTER_PORT}:9187"

  kafka-exporter:
    image: danielqsj/kafka-exporter
    container_name: kafka-exporter
    depends_on:
      - kafka
    command:
      - "--kafka.server=kafka:9092"
    ports:
      - "${KAFKA_EXPORTER_PORT}:9308"

  jaeger:
    image: jaegertracing/all-in-one:1.56
    container_name: jaeger
    environment:
      COLLECTOR_ZIPKIN_HOST_PORT: "${JAEGER_COLLECTOR_PORT}"
      JAEGER_AGENT_HOST: "${JAEGER_AGENT_HOST}"
    ports:
      - "${JAEGER_AGENT_PORT}:6831/udp"
      - "${JAEGER_COLLECTOR_PORT}:14268"
      - "${JAEGER_UI_PORT}:16686"

volumes:
  pgdata:
  grafana-data:
